package:  plugins.sfSocialPlugin.lib.model

classes:

  sfSocialContact:
    columns:
      id:         ~
      user_from:  { type: integer, required: true, foreignClass: sfGuardUser, foreignReference: id, onDelete: cascade, onUpdate: cascade }
      user_to:    { type: integer, required: true, foreignClass: sfGuardUser, foreignReference: id, onDelete: cascade, onUpdate: cascade }
      created_at: ~
    uniques:
      contact:    [ user_from, user_to ]
  
  sfSocialContactGroup:
    columns:
      id:         ~
      contact_id: { type: integer, required: true, foreignClass: sfSocialContact, foreignReference: id, onDelete: cascade, onUpdate: cascade }
      name:       { type: varchar }
  
  sfSocialContactGroupContact:
    columns:
      contact_group_id: { type: integer, primaryKey: true, required: true, foreignClass: sfSocialContactGroup, foreignReference: id, onDelete: cascade, onUpdate: cascade }
      contact_id:       { type: integer, primaryKey: true, required: true, foreignClass: sfSocialContact, foreignReference: id, onDelete: cascade, onUpdate: cascade }
      created_at:       ~
  
  sfSocialContactRequest:
    columns:
      id:         ~
      user_from:  { type: integer, required: true, foreignClass: sfGuardUser, foreignReference: id, onDelete: cascade, onUpdate: cascade }
      user_to:    { type: integer, required: true, foreignClass: sfGuardUser, foreignReference: id, onDelete: cascade, onUpdate: cascade }
      message:    { type: varchar }
      accepted:   { type: boolean, default: false }
      created_at: ~
    uniques:
      request:   [ user_from, user_to ]
  
  sfSocialEvent:
    columns:
      id:          ~
      user_admin:  { type: integer, required: true, foreignClass: sfGuardUser, foreignReference: id, onDelete: cascade, onUpdate: cascade }
      title:       { type: varchar, required: true }
      description: { type: longvarchar, required: true }
      start:       { type: timestamp }
      end:         { type: timestamp }
      location:    { type: varchar, required: true }
      created_at:  ~
      updated_at:  ~
  
  sfSocialEventInvite:
    columns:
      id:         ~
      event_id:   { type: integer, required: true, foreignClass: sfSocialEvent, foreignReference: id, onDelete: cascade, onUpdate: cascade }
      user_id:    { type: integer, required: true, foreignClass: sfGuardUser, foreignReference: id, onDelete: cascade, onUpdate: cascade }
      user_from:  { type: integer, required: true, foreignClass: sfGuardUser, foreignReference: id, onDelete: cascade, onUpdate: cascade }
      replied:    { type: boolean, default: false }
      created_at: ~
    uniques:
      invite:     [ event_id, user_id, user_from ]
  
  sfSocialEventUser:
    columns:
      event_id:   { type: integer, primaryKey: true, required: true, foreignClass: sfSocialEvent, foreignReference: id, onDelete: cascade, onUpdate: cascade }
      user_id:    { type: integer, primaryKey: true, required: true, foreignClass: sfGuardUser, foreignReference: id, onDelete: cascade, onUpdate: cascade }
      confirm:    { type: integer, required: true, default: 0 }
      created_at: ~
  
  sfSocialGroup:
    columns:
      id:          ~
      user_admin:  { type: integer, required: true, foreignClass: sfGuardUser, foreignReference: id, onDelete: cascade, onUpdate: cascade }
      title:       { type: varchar, required: true }
      description: { type: longvarchar, required: true }
      created_at:  ~
      updated_at:  ~
  
  sfSocialGroupInvite:
    columns:
      id:         ~
      group_id:   { type: integer, required: true, foreignClass: sfSocialGroup, foreignReference: id, onDelete: cascade, onUpdate: cascade }
      user_id:    { type: integer, required: true, foreignClass: sfGuardUser, foreignReference: id, onDelete: cascade, onUpdate: cascade }
      user_from:  { type: integer, required: true, foreignClass: sfGuardUser, foreignReference: id, onDelete: cascade, onUpdate: cascade }
      replied:    { type: boolean, default: false }
      created_at: ~
    uniques:
      invite:     [ group_id, user_id, user_from ]
  
  sfSocialGroupUser:
    columns:
      group_id:   { type: integer, primaryKey: true, required: true, foreignClass: sfSocialGroup, foreignReference: id, onDelete: cascade, onUpdate: cascade }
      user_id:    { type: integer, primaryKey: true, required: true, foreignClass: sfGuardUser, foreignReference: id, onDelete: cascade, onUpdate: cascade }
      created_at: ~
  
  sfSocialMessage:
    columns:
      id:         ~
      user_from:  { type: integer, required: true, foreignClass: sfGuardUser, foreignReference: id, onDelete: cascade, onUpdate: cascade }
      subject:    { type: varchar, required: true }
      text:       { type: longvarchar, required: true }
      created_at: ~
  
  sfSocialMessageRcpt:
    columns:
      id:      ~
      msg_id:  { type: integer, required: true, foreignClass: sfSocialMessage, foreignReference: id, onDelete: cascade, onUpdate: cascade }
      user_to: { type: integer, required: true, foreignClass: sfGuardUser, foreignReference: id, onDelete: cascade, onUpdate: cascade }
      is_read: { type: boolean, default: false }
  
  sfSocialNotify:
    columns:
      id:         ~
      user_id:    { type: integer, required: true, foreignClass: sfGuardUser, foreignReference: id, onDelete: cascade, onUpdate: cascade }
      model_name: { type: varchar, required: true }
      model_id:   { type: integer, required: true }
      is_read:    { type: boolean, default: false }
      created_at: ~
  
  sfGuardUserProfile:
    package: plugins.sfGuardPlugin.lib.model
    columns:
      id:         ~
      user_id:    { type: integer, foreignClass: sfGuardUser, foreignReference: id, required: true, onDelete: cascade }
      email:      { type: varchar, required: true }
      first_name: { type: varchar }
      last_name:  { type: varchar }
      birthday:   { type: date }
      sex:        { type: char, size: 1 }
      location:   { type: varchar }
      picture:    { type: varchar }