propel:
  _attributes: { package: plugins.sfSocialPlugin.lib.model }

  sf_social_contact:
    _attributes: { phpName: sfSocialContact }
    id: ~
    user_from:  { type: integer, required: true, foreignTable: sf_guard_user, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    user_to:    { type: integer, required: true, foreignTable: sf_guard_user, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    created_at: ~
    _uniques:   { contact: [user_from, user_to] }
  
  sf_social_contact_group:
    _attributes: { phpName: sfSocialContactGroup }
    id:         ~
    contact_id: { type: integer, required: true, foreignTable: sf_social_contact, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    name:       { type: varchar, size: 255 }
  
  sf_social_contact_group_contact:
    _attributes: { phpName: sfSocialContactGroupContact }
    contact_group_id: { type: integer, primaryKey: true, required: true, foreignTable: sf_social_contact_group, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    contact_id:       { type: integer, primaryKey: true, required: true, foreignTable: sf_social_contact, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    created_at:       ~
  
  sf_social_contact_request:
    _attributes: { phpName: sfSocialContactRequest }
    id:         ~
    user_from:  { type: integer, required: true, foreignTable: sf_guard_user, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    user_to:    { type: integer, required: true, foreignTable: sf_guard_user, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    message:    { type: varchar, size: 255 }
    accepted:   { type: boolean, default: false }
    created_at: ~
    _uniques:   { request: [user_from, user_to] }
  
  sf_social_event:
    _attributes: { phpName: sfSocialEvent }
    id: ~
    user_admin:  { type: integer, required: true, foreignTable: sf_guard_user, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    title:       { type: varchar, size: 255, required: true }
    description: { type: longvarchar, required: true }
    start:       { type: timestamp }
    end:         { type: timestamp }
    location:    { type: varchar, size: 255, required: true }
    created_at:  ~
    updated_at:  ~
  
  sf_social_event_invite:
    _attributes: { phpName: sfSocialEventInvite }
    id:         ~
    event_id:   { type: integer, required: true, foreignTable: sf_social_event, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    user_id:    { type: integer, required: true, foreignTable: sf_guard_user, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    user_from:  { type: integer, required: true, foreignTable: sf_guard_user, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    replied:    { type: boolean, default: false }
    created_at: ~
    _uniques:   { invite: [event_id, user_id, user_from] }
  
  sf_social_event_user:
    _attributes: { phpName: sfSocialEventUser }
    event_id:   { type: integer, primaryKey: true, required: true, foreignTable: sf_social_event, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    user_id:    { type: integer, primaryKey: true, required: true, foreignTable: sf_guard_user, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    confirm:    { type: integer, required: true, default: 0 }
    created_at: ~
  
  sf_social_group:
    _attributes: { phpName: sfSocialGroup }
    id:          ~
    user_admin:  { type: integer, required: true, foreignTable: sf_guard_user, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    title:       { type: varchar, size: 255, required: true }
    description: { type: longvarchar, required: true }
    created_at:  ~
    updated_at:  ~
  
  sf_social_group_invite:
    _attributes: { phpName: sfSocialGroupInvite }
    id:         ~
    group_id:   { type: integer, required: true, foreignTable: sf_social_group, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    user_id:    { type: integer, required: true, foreignTable: sf_guard_user, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    user_from:  { type: integer, required: true, foreignTable: sf_guard_user, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    replied:    { type: boolean, default: false }
    created_at: ~
    _uniques:   { invite: [group_id, user_id, user_from] }
  
  sf_social_group_user:
    _attributes: { phpName: sfSocialGroupUser }
    group_id:   { type: integer, primaryKey: true, required: true, foreignTable: sf_social_group, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    user_id:    { type: integer, primaryKey: true, required: true, foreignTable: sf_guard_user, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    created_at: ~
  
  sf_social_message:
    _attributes: { phpName: sfSocialMessage }
    id:         ~
    user_from:  { type: integer, required: true, foreignTable: sf_guard_user, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    subject:    { type: varchar, size: 255, required: true }
    text:       { type: longvarchar, required: true }
    created_at: ~
  
  sf_social_message_rcpt:
    _attributes: { phpName: sfSocialMessageRcpt }
    id:      ~
    msg_id:  { type: integer, required: true, foreignTable: sf_social_message, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    user_to: { type: integer, required: true, foreignTable: sf_guard_user, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    is_read: { type: boolean, default: false }
  
  sf_social_notify:
    _attributes: { phpName: sfSocialNotify }
    id:         ~
    user_id:    { type: integer, required: true, foreignTable: sf_guard_user, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    model_name: { type: varchar, size: 255, required: true }
    model_id:   { type: integer, required: true }
    is_read:    { type: boolean, default: false }
    created_at: ~
  
  sf_guard_user_profile:
    _attributes: { phpName: sfGuardUserProfile, package: plugins.sfGuardPlugin.lib.model }
    id:          ~
    user_id:     { type: integer, foreignTable: sf_guard_user, foreignReference: id, required: true, onDelete: cascade }
    email:       { type: varchar, size: 255, required: true }
    first_name:  { type: varchar, size: 255 }
    last_name:   { type: varchar, size: 255 }
    birthday:    { type: date }
    sex:         { type: char, size: 1 }
    location:    { type: varchar, size: 255 }
    picture:     { type: varchar, size: 155 }
