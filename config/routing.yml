# TOOD move this on an event based lib class

# messages

sf_social_message_sentlist:
  url:   /messages/sent/*
  param: { module: sfSocialMessage, action: sentlist }

sf_social_message_list:
  url:   /messages/*
  param: { module: sfSocialMessage, action: list }

sf_social_message_sentread:
  url:          /message/sent/:id
  param:        { module: sfSocialMessage, action: sentread }
  class:        sfPropelRoute
  options:      { model: sfSocialMessage, type: object }
  requirements: { id: \d+, sf_method: get }

sf_social_message_read:
  url:          /message/:id
  param:        { module: sfSocialMessage, action: read }
  class:        sfPropelRoute
  options:      { model: sfSocialMessage, type: object }
  requirements: { id: \d+, sf_method: get }

sf_social_message_new:
  url:   /message/compose/*
  param: { module: sfSocialMessage, action: compose }

sf_social_message_js:
  url:   /message.js
  param: { module: sfSocialMessage, action: composejs, sf_format: js }

# events

sf_social_event_invitedlist:
  url:   /events/invited/*
  param: { module: sfSocialEvent, action: invitedlist }

sf_social_event_list:
  url:   /events/*
  param: { module: sfSocialEvent, action: list }

sf_social_event_pastlist:
  url:   /pastevents/*
  param: { module: sfSocialEvent, action: pastlist }

sf_social_event_edit:
  url:          /event/:id/edit
  param:        { module: sfSocialEvent, action: edit }
  class:        sfPropelRoute
  options:      { model: sfSocialEvent, type: object }
  requirements: { id: \d+, sf_method: [ get, post ] }

sf_social_event_invite:
  url:          /event/:id/invite/*
  param:        { module: sfSocialEvent, action: invite }
  class:        sfPropelRoute
  options:      { model: sfSocialEvent, type: object }
  requirements: { id: \d+, sf_method: post }

sf_social_event:
  url:          /event/:id
  param:        { module: sfSocialEvent, action: view }
  class:        sfPropelRoute
  options:      { model: sfSocialEvent, type: object }
  requirements: { id: \d+, sf_method: [ get, post ] }

sf_social_event_new:
  url:   /event/create
  param: { module: sfSocialEvent, action: create }

# contacts

sf_social_contact_requests:
  url:   /contacts/requests/*
  param: { module: sfSocialContact, action: requests }

sf_social_contact_sentrequests:
  url:   /contacts/sentrequests/*
  param: { module: sfSocialContact, action: sentrequests }

sf_social_contact_list:
  url:   /contacts/*
  param: { module: sfSocialContact, action: list }

sf_social_contact_accept_request:
  url:          /request/accept/:id
  param:        { module: sfSocialContact, action: acceptrequest }
  class:        sfPropelRoute
  options:      { model: sfSocialContactRequest, type: object }
  requirements: { id: \d+, sf_method: get }

sf_social_contact_deny_request:
  url:          /request/deny/:id
  param:        { module: sfSocialContact, action: denyrequest }
  class:        sfPropelRoute
  options:      { model: sfSocialContactRequest, type: object }
  requirements: { id: \d+, sf_method: get }

sf_social_contact_cancel_request:
  url:          /request/cancel/:id
  param:        { module: sfSocialContact, action: cancelrequest }
  class:        sfPropelRoute
  options:      { model: sfSocialContactRequest, type: object }
  requirements: { id: \d+, sf_method: get }

sf_social_contact_send_request:
  url:   /request/send/*
  param: { module: sfSocialContact, action: sendrequest }

sf_social_contact_delete:
  url:   /contact/delete/:id
  param: { module: sfSocialContact, action: delete }
  class:        sfPropelRoute
  options:      { model: sfSocialContact, type: object }
  requirements: { id: \d+, sf_method: delete }

sf_social_contact_search:
  url:   /search/*
  param: { module: sfSocialContact, action: search, sf_format: json }

# notify

sf_social_notify:
  url:          /notify/:id
  param:        { module: sfSocialNotify, action: get }
  class:        sfPropelRoute
  options:      { model: sfSocialNotify, type: object }
  requirements: { id: \d+, sf_method: get }


# user

sf_social_user_search:
  url:   /user/search/*
  param: { module: sfSocialUser, action: search }

sf_social_user_edit:
  url:          /user/editprofile
  param:        { module: sfSocialUser, action: edit }

sf_social_user:
  url:          /user/:username
  param:        { module: sfSocialUser, action: user }
  class:        sfPropelRoute
  options:      { model: sfSocialGuardUser, type: object }
  requirements: { username: \w+, sf_method: get }

sf_social_user_contacts:
  url:          /user/:username/contacts
  param:        { module: sfSocialUser, action: contacts }
  class:        sfPropelRoute
  options:      { model: sfSocialGuardUser, type: object }
  requirements: { username: \w+, sf_method: get }

sf_social_user_shared_contacts:
  url:          /user/sharedcontacts/:user1/:user2
  param:        { module: sfSocialUser, action: sharedcontacts }
  requirements: { user1: \w+, user2: \w+ }

# groups

sf_social_group_list:
  url:   /groups/*
  param: { module: sfSocialGroup, action: list }

sf_social_group_mylist:
  url:   /mygroups
  param: { module: sfSocialGroup, action: mylist }

sf_social_group_invitedlist:
  url:   /groups/invited/*
  param: { module: sfSocialGroup, action: invitedlist }

sf_social_group_edit:
  url:          /group/:id/edit
  param:        { module: sfSocialGroup, action: edit }
  class:        sfPropelRoute
  options:      { model: sfSocialGroup, type: object }
  requirements: { id: \d+, sf_method: [ get, post ] }

sf_social_group_invite:
  url:          /group/:id/invite/*
  param:        { module: sfSocialGroup, action: invite }
  class:        sfPropelRoute
  options:      { model: sfSocialGroup, type: object }
  requirements: { id: \d+, sf_method: [ post ] }

sf_social_group_join:
  url:          /group/:id/join
  param:        { module: sfSocialGroup, action: join }
  class:        sfPropelRoute
  options:      { model: sfSocialGroup, type: object }
  requirements: { id: \d+, sf_method: [ get, post ] }

sf_social_group_accept:
  url:          /group/:id/accept
  param:        { module: sfSocialGroup, action: accept }
  class:        sfPropelRoute
  options:      { model: sfSocialGroupInvite, type: object }
  requirements: { id: \d+, sf_method: [ get, post ] }

sf_social_group_deny:
  url:          /group/:id/deny
  param:        { module: sfSocialGroup, action: deny }
  class:        sfPropelRoute
  options:      { model: sfSocialGroupInvite, type: object }
  requirements: { id: \d+, sf_method: [ get, post ] }

sf_social_group:
  url:          /group/:id
  param:        { module: sfSocialGroup, action: view }
  class:        sfPropelRoute
  options:      { model: sfSocialGroup, type: object }
  requirements: { id: \d+, sf_method: [ get, post ] }

sf_social_group_new:
  url:   /group/create
  param: { module: sfSocialGroup, action: create }